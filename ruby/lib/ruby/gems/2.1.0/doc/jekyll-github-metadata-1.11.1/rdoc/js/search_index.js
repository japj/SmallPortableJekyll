var search_data = {"index":{"searchIndex":["jekyll","errors","githubmetadata","client","ghpmetadatagenerator","pages","repository","sanitizer","value","[]()","accepts_client_method?()","api_url()","build_octokit_client()","cache()","cache_key()","clear_values!()","client()","client_inspect()","cname()","contributors()","custom_domains_enabled?()","default_user_domain()","domain()","dotcom?()","enterprise?()","env()","env_var()","environment()","generate()","git_ref()","git_remote_url()","github_hostname()","github_repo?()","github_url()","help_url()","init!()","initialize_repo!()","inspect()","issues_url()","language()","memoize_value()","method_missing()","new()","new()","new()","nwo()","nwo_from_config()","nwo_from_env()","nwo_from_git_origin_remote()","organization_public_members()","organization_repository?()","owner_gravatar_url()","owner_public_repositories()","owner_url()","pages_hostname()","pages_url()","pluck_auth_method()","primary?()","project_page?()","register_value()","releases()","releases_url()","render()","repo_clone_url()","repo_info()","repository_url()","reset!()","respond_to?()","safe_require()","sanitize()","sanitize_resource()","save_from_errors()","scheme()","show_downloads?()","ssl?()","subdomain_isolation?()","tagline()","tar_url()","test?()","to_json()","to_liquid()","to_s()","trim_last_slash()","url_scheme()","user_domain()","user_page?()","user_page_domains()","values()","wiki_url()","zip_url()"],"longSearchIndex":["jekyll","jekyll::errors","jekyll::githubmetadata","jekyll::githubmetadata::client","jekyll::githubmetadata::ghpmetadatagenerator","jekyll::githubmetadata::pages","jekyll::githubmetadata::repository","jekyll::githubmetadata::sanitizer","jekyll::githubmetadata::value","jekyll::githubmetadata#[]()","jekyll::githubmetadata::client#accepts_client_method?()","jekyll::githubmetadata::pages#api_url()","jekyll::githubmetadata::client#build_octokit_client()","jekyll::githubmetadata::client#cache()","jekyll::githubmetadata::client#cache_key()","jekyll::githubmetadata#clear_values!()","jekyll::githubmetadata#client()","jekyll::githubmetadata::client#client_inspect()","jekyll::githubmetadata::repository#cname()","jekyll::githubmetadata::repository#contributors()","jekyll::githubmetadata::pages#custom_domains_enabled?()","jekyll::githubmetadata::repository#default_user_domain()","jekyll::githubmetadata::repository#domain()","jekyll::githubmetadata::pages#dotcom?()","jekyll::githubmetadata::pages#enterprise?()","jekyll::githubmetadata::pages#env()","jekyll::githubmetadata::pages#env_var()","jekyll::githubmetadata#environment()","jekyll::githubmetadata::ghpmetadatagenerator#generate()","jekyll::githubmetadata::repository#git_ref()","jekyll::githubmetadata::ghpmetadatagenerator#git_remote_url()","jekyll::githubmetadata::pages#github_hostname()","jekyll::githubmetadata::repository#github_repo?()","jekyll::githubmetadata::pages#github_url()","jekyll::githubmetadata::pages#help_url()","jekyll::githubmetadata#init!()","jekyll::githubmetadata::ghpmetadatagenerator#initialize_repo!()","jekyll::githubmetadata::client#inspect()","jekyll::githubmetadata::repository#issues_url()","jekyll::githubmetadata::repository#language()","jekyll::githubmetadata::repository#memoize_value()","jekyll::githubmetadata::client#method_missing()","jekyll::githubmetadata::client::new()","jekyll::githubmetadata::repository::new()","jekyll::githubmetadata::value::new()","jekyll::githubmetadata::ghpmetadatagenerator#nwo()","jekyll::githubmetadata::ghpmetadatagenerator#nwo_from_config()","jekyll::githubmetadata::ghpmetadatagenerator#nwo_from_env()","jekyll::githubmetadata::ghpmetadatagenerator#nwo_from_git_origin_remote()","jekyll::githubmetadata::repository#organization_public_members()","jekyll::githubmetadata::repository#organization_repository?()","jekyll::githubmetadata::repository#owner_gravatar_url()","jekyll::githubmetadata::repository#owner_public_repositories()","jekyll::githubmetadata::repository#owner_url()","jekyll::githubmetadata::pages#pages_hostname()","jekyll::githubmetadata::repository#pages_url()","jekyll::githubmetadata::client#pluck_auth_method()","jekyll::githubmetadata::repository#primary?()","jekyll::githubmetadata::repository#project_page?()","jekyll::githubmetadata#register_value()","jekyll::githubmetadata::repository#releases()","jekyll::githubmetadata::repository#releases_url()","jekyll::githubmetadata::value#render()","jekyll::githubmetadata::repository#repo_clone_url()","jekyll::githubmetadata::repository#repo_info()","jekyll::githubmetadata::repository#repository_url()","jekyll::githubmetadata#reset!()","jekyll::githubmetadata::client#respond_to?()","jekyll::githubmetadata::client#safe_require()","jekyll::githubmetadata::sanitizer#sanitize()","jekyll::githubmetadata::sanitizer#sanitize_resource()","jekyll::githubmetadata::client#save_from_errors()","jekyll::githubmetadata::pages#scheme()","jekyll::githubmetadata::repository#show_downloads?()","jekyll::githubmetadata::pages#ssl?()","jekyll::githubmetadata::pages#subdomain_isolation?()","jekyll::githubmetadata::repository#tagline()","jekyll::githubmetadata::repository#tar_url()","jekyll::githubmetadata::pages#test?()","jekyll::githubmetadata::value#to_json()","jekyll::githubmetadata::value#to_liquid()","jekyll::githubmetadata::value#to_s()","jekyll::githubmetadata::pages#trim_last_slash()","jekyll::githubmetadata::repository#url_scheme()","jekyll::githubmetadata::repository#user_domain()","jekyll::githubmetadata::repository#user_page?()","jekyll::githubmetadata::repository#user_page_domains()","jekyll::githubmetadata#values()","jekyll::githubmetadata::repository#wiki_url()","jekyll::githubmetadata::repository#zip_url()"],"info":[["Jekyll","","Jekyll.html","",""],["Jekyll::Errors","","Jekyll/Errors.html","",""],["Jekyll::GitHubMetadata","","Jekyll/GitHubMetadata.html","",""],["Jekyll::GitHubMetadata::Client","","Jekyll/GitHubMetadata/Client.html","",""],["Jekyll::GitHubMetadata::GHPMetadataGenerator","","Jekyll/GitHubMetadata/GHPMetadataGenerator.html","",""],["Jekyll::GitHubMetadata::Pages","","Jekyll/GitHubMetadata/Pages.html","",""],["Jekyll::GitHubMetadata::Repository","","Jekyll/GitHubMetadata/Repository.html","",""],["Jekyll::GitHubMetadata::Sanitizer","","Jekyll/GitHubMetadata/Sanitizer.html","",""],["Jekyll::GitHubMetadata::Value","","Jekyll/GitHubMetadata/Value.html","",""],["[]","Jekyll::GitHubMetadata","Jekyll/GitHubMetadata.html#method-i-5B-5D","(key)",""],["accepts_client_method?","Jekyll::GitHubMetadata::Client","Jekyll/GitHubMetadata/Client.html#method-i-accepts_client_method-3F","(method_name)",""],["api_url","Jekyll::GitHubMetadata::Pages","Jekyll/GitHubMetadata/Pages.html#method-i-api_url","()",""],["build_octokit_client","Jekyll::GitHubMetadata::Client","Jekyll/GitHubMetadata/Client.html#method-i-build_octokit_client","(options = nil)",""],["cache","Jekyll::GitHubMetadata::Client","Jekyll/GitHubMetadata/Client.html#method-i-cache","()",""],["cache_key","Jekyll::GitHubMetadata::Client","Jekyll/GitHubMetadata/Client.html#method-i-cache_key","(method, *args)",""],["clear_values!","Jekyll::GitHubMetadata","Jekyll/GitHubMetadata.html#method-i-clear_values-21","()",""],["client","Jekyll::GitHubMetadata","Jekyll/GitHubMetadata.html#method-i-client","()",""],["client_inspect","Jekyll::GitHubMetadata::Client","Jekyll/GitHubMetadata/Client.html#method-i-client_inspect","()",""],["cname","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-cname","()",""],["contributors","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-contributors","()",""],["custom_domains_enabled?","Jekyll::GitHubMetadata::Pages","Jekyll/GitHubMetadata/Pages.html#method-i-custom_domains_enabled-3F","()",""],["default_user_domain","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-default_user_domain","()",""],["domain","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-domain","()",""],["dotcom?","Jekyll::GitHubMetadata::Pages","Jekyll/GitHubMetadata/Pages.html#method-i-dotcom-3F","()",""],["enterprise?","Jekyll::GitHubMetadata::Pages","Jekyll/GitHubMetadata/Pages.html#method-i-enterprise-3F","()",""],["env","Jekyll::GitHubMetadata::Pages","Jekyll/GitHubMetadata/Pages.html#method-i-env","()",""],["env_var","Jekyll::GitHubMetadata::Pages","Jekyll/GitHubMetadata/Pages.html#method-i-env_var","(key, intermediate_default = nil)",""],["environment","Jekyll::GitHubMetadata","Jekyll/GitHubMetadata.html#method-i-environment","()",""],["generate","Jekyll::GitHubMetadata::GHPMetadataGenerator","Jekyll/GitHubMetadata/GHPMetadataGenerator.html#method-i-generate","(site)",""],["git_ref","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-git_ref","()",""],["git_remote_url","Jekyll::GitHubMetadata::GHPMetadataGenerator","Jekyll/GitHubMetadata/GHPMetadataGenerator.html#method-i-git_remote_url","()",""],["github_hostname","Jekyll::GitHubMetadata::Pages","Jekyll/GitHubMetadata/Pages.html#method-i-github_hostname","()",""],["github_repo?","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-github_repo-3F","()",""],["github_url","Jekyll::GitHubMetadata::Pages","Jekyll/GitHubMetadata/Pages.html#method-i-github_url","()",""],["help_url","Jekyll::GitHubMetadata::Pages","Jekyll/GitHubMetadata/Pages.html#method-i-help_url","()",""],["init!","Jekyll::GitHubMetadata","Jekyll/GitHubMetadata.html#method-i-init-21","()","<p>Reset our values hash.\n"],["initialize_repo!","Jekyll::GitHubMetadata::GHPMetadataGenerator","Jekyll/GitHubMetadata/GHPMetadataGenerator.html#method-i-initialize_repo-21","(repo_nwo)",""],["inspect","Jekyll::GitHubMetadata::Client","Jekyll/GitHubMetadata/Client.html#method-i-inspect","()",""],["issues_url","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-issues_url","()",""],["language","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-language","()",""],["memoize_value","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-memoize_value","(var_name, value)",""],["method_missing","Jekyll::GitHubMetadata::Client","Jekyll/GitHubMetadata/Client.html#method-i-method_missing","(method_name, *args, &block)",""],["new","Jekyll::GitHubMetadata::Client","Jekyll/GitHubMetadata/Client.html#method-c-new","(options = nil)",""],["new","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-c-new","(name_with_owner)",""],["new","Jekyll::GitHubMetadata::Value","Jekyll/GitHubMetadata/Value.html#method-c-new","(*args)",""],["nwo","Jekyll::GitHubMetadata::GHPMetadataGenerator","Jekyll/GitHubMetadata/GHPMetadataGenerator.html#method-i-nwo","(site)","<p>Public: fetches the repository name with owner to fetch metadata for. In\norder of precedence, this method …\n"],["nwo_from_config","Jekyll::GitHubMetadata::GHPMetadataGenerator","Jekyll/GitHubMetadata/GHPMetadataGenerator.html#method-i-nwo_from_config","(site)",""],["nwo_from_env","Jekyll::GitHubMetadata::GHPMetadataGenerator","Jekyll/GitHubMetadata/GHPMetadataGenerator.html#method-i-nwo_from_env","()",""],["nwo_from_git_origin_remote","Jekyll::GitHubMetadata::GHPMetadataGenerator","Jekyll/GitHubMetadata/GHPMetadataGenerator.html#method-i-nwo_from_git_origin_remote","()",""],["organization_public_members","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-organization_public_members","()",""],["organization_repository?","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-organization_repository-3F","()",""],["owner_gravatar_url","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-owner_gravatar_url","()",""],["owner_public_repositories","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-owner_public_repositories","()",""],["owner_url","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-owner_url","()",""],["pages_hostname","Jekyll::GitHubMetadata::Pages","Jekyll/GitHubMetadata/Pages.html#method-i-pages_hostname","()",""],["pages_url","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-pages_url","()",""],["pluck_auth_method","Jekyll::GitHubMetadata::Client","Jekyll/GitHubMetadata/Client.html#method-i-pluck_auth_method","()",""],["primary?","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-primary-3F","()",""],["project_page?","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-project_page-3F","()",""],["register_value","Jekyll::GitHubMetadata","Jekyll/GitHubMetadata.html#method-i-register_value","(key, value)",""],["releases","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-releases","()",""],["releases_url","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-releases_url","()",""],["render","Jekyll::GitHubMetadata::Value","Jekyll/GitHubMetadata/Value.html#method-i-render","()",""],["repo_clone_url","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-repo_clone_url","()",""],["repo_info","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-repo_info","()",""],["repository_url","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-repository_url","()",""],["reset!","Jekyll::GitHubMetadata","Jekyll/GitHubMetadata.html#method-i-reset-21","()",""],["respond_to?","Jekyll::GitHubMetadata::Client","Jekyll/GitHubMetadata/Client.html#method-i-respond_to-3F","(method_name, include_private = false)",""],["safe_require","Jekyll::GitHubMetadata::Client","Jekyll/GitHubMetadata/Client.html#method-i-safe_require","(gem_name)",""],["sanitize","Jekyll::GitHubMetadata::Sanitizer","Jekyll/GitHubMetadata/Sanitizer.html#method-i-sanitize","(resource)","<p>Sanitize an object. When the resource is either `false`, `true`, `nil` or a\nnumber,\n\n<pre>it returns the resource ...</pre>\n"],["sanitize_resource","Jekyll::GitHubMetadata::Sanitizer","Jekyll/GitHubMetadata/Sanitizer.html#method-i-sanitize_resource","(resource)","<p>Sanitize the Sawyer Resource or Hash Note: the object must respond to\n:to_hash for this to work. Consider …\n"],["save_from_errors","Jekyll::GitHubMetadata::Client","Jekyll/GitHubMetadata/Client.html#method-i-save_from_errors","(default = false, &block)",""],["scheme","Jekyll::GitHubMetadata::Pages","Jekyll/GitHubMetadata/Pages.html#method-i-scheme","()",""],["show_downloads?","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-show_downloads-3F","()",""],["ssl?","Jekyll::GitHubMetadata::Pages","Jekyll/GitHubMetadata/Pages.html#method-i-ssl-3F","()","<p>Whether the GitHub instance supports HTTPS Note: this will be the same as\nhow sites are served in Enterprise …\n"],["subdomain_isolation?","Jekyll::GitHubMetadata::Pages","Jekyll/GitHubMetadata/Pages.html#method-i-subdomain_isolation-3F","()",""],["tagline","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-tagline","()",""],["tar_url","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-tar_url","()",""],["test?","Jekyll::GitHubMetadata::Pages","Jekyll/GitHubMetadata/Pages.html#method-i-test-3F","()",""],["to_json","Jekyll::GitHubMetadata::Value","Jekyll/GitHubMetadata/Value.html#method-i-to_json","(*)",""],["to_liquid","Jekyll::GitHubMetadata::Value","Jekyll/GitHubMetadata/Value.html#method-i-to_liquid","()",""],["to_s","Jekyll::GitHubMetadata::Value","Jekyll/GitHubMetadata/Value.html#method-i-to_s","()",""],["trim_last_slash","Jekyll::GitHubMetadata::Pages","Jekyll/GitHubMetadata/Pages.html#method-i-trim_last_slash","(url)",""],["url_scheme","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-url_scheme","()","<p>In enterprise, the site&#39;s scheme will be the same as the instance&#39;s\nIn dotcom, this will be `https` …\n"],["user_domain","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-user_domain","()",""],["user_page?","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-user_page-3F","()",""],["user_page_domains","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-user_page_domains","()",""],["values","Jekyll::GitHubMetadata","Jekyll/GitHubMetadata.html#method-i-values","()",""],["wiki_url","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-wiki_url","()",""],["zip_url","Jekyll::GitHubMetadata::Repository","Jekyll/GitHubMetadata/Repository.html#method-i-zip_url","()",""]]}}